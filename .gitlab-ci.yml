image: node:20-alpine

variables:
  auth_service_path: "server/auth_service"
  appointment_service_path: "server/appointment_service"
  clinic_service_path: "server/clinic_service"
  notification_service_path: "server/notification_service"
  mock_data_path: "server/mock_data"

stages:
  - build
  - test
  - deploy

build-auth-service:
  stage: build
  tags: 
    - docker
  script:
    - cd $auth_service_path
    - npm ci
    - npm run build
  artifacts:
    paths:
      - $auth_service_path/dist
    expire_in: 1 hour

build-appointment-service:
  stage: build
  tags: 
    - docker
  script:
    - cd $appointment_service_path
    - npm ci
    - npm run build
  artifacts:
    paths:
      - $appointment_service_path/dist
    expire_in: 1 hour

build-clinic-service:
  stage: build
  tags: 
    - docker
  script:
    - cd $clinic_service_path
    - npm ci
    - npm run build
  artifacts:
    paths:
      - $clinic_service_path/dist
    expire_in: 1 hour

# test-auth-service:
#   stage: test
#   tags:
#     - docker
#   services:
#     - name: mongo:latest
#       alias: mongo-auth
#     - name: emqx/emqx:latest
#       alias: mqtt-broker
#   before_script:
#     - ./$mock_data_path/authentication_db/init_authentication.sh
#   script:
#     - cd $auth_service_path
#     - npm ci
#     - npm run start
#     - npm run test
#   dependencies:
#     - build-auth-service

test-appointment-service:
  stage: test
  tags:
    - docker
  needs:
    - build-appointment-service
  services:
    - name: mongo:latest
      alias: mongo-appointment
    - name: emqx/emqx:latest
      alias: mqtt-broker
  before_script:
    - docker cp $mock_data_path/appointment_db mongo-appointment:/docker-entrypoint-initdb.d/ # In theory, db should seeded in case no data is present
    - apk add --no-cache mongodb-tools #! Will be removed in case seeding is successfully done
  script:
    - mongo mongo-appointment/appointment_db --eval 'db.slots.find().pretty()' #! Will be removed in case seeding is successfully done
    - cd $appointment_service_path
    - npm ci
    - npm run start
    - npm run test
  dependencies:
    - build-appointment-service

# test-clinic-service:
#   stage: test
#   tags:
#     - docker
#   needs:
#     - build-clinic-service
#   services:
#     - name: mongo:latest
#       alias: mongo-clinic
#     - name: emqx/emqx:latest
#       alias: mqtt-broker
#   before_script:
#     - ./$mock_data_path/clinic_db/init_clinic.sh
#   script:
#     - cd $clinic_service_path
#     - npm ci
#     - npm run start
#     - npm run test
#   dependencies:
#     - build-clinic-service

deploy:
  stage: deploy
  script: 
    - npm run start
  only:
    - master
