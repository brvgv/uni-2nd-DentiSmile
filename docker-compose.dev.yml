version: '3.8'

services:
    # Frontend Web Application
    frontend:
        build:
            context: .
            dockerfile: frontend/Dockerfile.dev
        container_name: frontend
        restart: unless-stopped
        ports:
            - '4000:3000'
        volumes:
            # Optimize volume mounts
            - ./frontend:/app/frontend:delegated
            - frontend_node_modules:/app/frontend/node_modules
            # Exclude .next folder from mounting
            - /app/frontend/.next
        env_file:
            - ./frontend/.env
        networks:
            - network-cluster
        depends_on:
            - clinic-service
            - appointment-service
            - auth-service
            - mqtt-broker

    # Clinic Service
    clinic-service:
        build:
            context: .
            dockerfile: server/clinic_service/Dockerfile.dev
        container_name: clinic-service
        restart: unless-stopped
        ports:
            - '3300:3300'
        volumes:
            # Mount source code but exclude node_modules
            - ./server/clinic_service:/app/server/clinic_service
            - ./shared:/app/shared
            - /app/server/clinic_service/node_modules
            - /app/shared/node_modules
        env_file:
            - ./server/clinic_service/.env
        environment:
            - NODE_ENV=development
        depends_on:
            - mongo-clinic
            - mqtt-broker
        networks:
            - network-cluster

    # Appointment Service
    appointment-service:
        build:
            context: .
            dockerfile: server/appointment_service/Dockerfile.dev
        container_name: appointment-service
        restart: unless-stopped
        ports:
            - '5000:5000'
        volumes:
            # Mount source code but exclude node_modules
            - ./server/appointment_service:/app/server/appointment_service
            - ./shared:/app/shared
            - /app/server/appointment_service/node_modules
            - /app/shared/node_modules
        env_file:
            - ./server/appointment_service/.env
        environment:
            - NODE_ENV=development
        depends_on:
            - mongo-appointment
            - mqtt-broker
        networks:
            - network-cluster

    # second instance of appointment-service to load-balance incoming requests
    appointment-service-2:
        build:
            context: .
            dockerfile: server/appointment_service/Dockerfile.dev
        container_name: appointment_service-2
        restart: unless-stopped
        # ContainerPort mapping to 1st appointment service
        ports:
            - '5002:5000'
        volumes:
            - ./server/appointment_service:/app/server/appointment_service
            - ./shared:/app/shared
        env_file:
            - ./server/appointment_service/.env
        environment:
            - NODE_ENV=development
        depends_on:
            - mongo-appointment
        networks:
            - network-cluster

    # Auth Service
    auth-service:
        build:
            context: .
            dockerfile: server/auth_service/Dockerfile.dev
        container_name: auth-service
        restart: unless-stopped
        ports:
            - '4400:4400'
        volumes:
            - ./server/auth_service:/app/server/auth_service
            - ./shared:/app/shared
            - /app/server/auth_service/node_modules
            - /app/shared/node_modules
        env_file:
            - ./server/auth_service/.env
        environment:
            - NODE_ENV=development
        depends_on:
            - mongo-auth
            - mqtt-broker
        networks:
            - network-cluster

    # Notification Service
    notification-service:
        build:
            context: .
            dockerfile: server/notification_service/Dockerfile.dev
        container_name: notification-service
        restart: unless-stopped
        ports:
            - '6500:6500'
        volumes:
            - ./server/notification_service:/app/server/notification_service
            - ./shared:/app/shared
            - /app/server/notification_service/node_modules
            - /app/shared/node_modules
        env_file:
            - ./server/notification_service/.env
        environment:
            - NODE_ENV=development
        depends_on:
            - mongo-notification
            - mqtt-broker
        networks:
            - network-cluster

    #mqtt-broker instances (3)
    mqtt-broker:
        image: eclipse-mosquitto:2.0
        container_name: mqtt-broker
        volumes:
            - ./infrastructure/mqtt-broker/config:/mosquitto/config
        ports:
            - '1885:1883'
            - '9002:9001'
        networks:
            - network-cluster
        restart: always

    mqtt-broker2:
        image: eclipse-mosquitto:2.0
        container_name: mqtt-broker2
        volumes:
            - ./infrastructure/mqtt-broker/config:/mosquitto/config
        ports:
            - '2883:1883'
            - '2901:9001'
        networks:
            - network-cluster
        restart: always

    mqtt-broker3:
        image: eclipse-mosquitto:2.0
        container_name: mqtt-broker3
        volumes:
            - ./infrastructure/mqtt-broker/config:/mosquitto/config
        ports:
            - '3883:1883'
            - '3901:9001'
        networks:
            - network-cluster
        restart: always

    mongo-clinic:
        image: mongo:latest
        container_name: mongo-clinic
        ports:
            - '27018:27017'
        volumes:
            - ./infrastructure/database/clinic_data:/data/db
            - ./server/mock_data/clinic_db:/docker-entrypoint-initdb.d
        networks:
            - network-cluster

    mongo-appointment:
        image: mongo:latest
        container_name: mongo-appointment
        ports:
            - '27019:27017'
        volumes:
            - ./infrastructure/database/appointment_data:/data/db
            - ./server/mock_data/appointment_db:/docker-entrypoint-initdb.d
        networks:
            - network-cluster

    mongo-auth:
        image: mongo:latest
        container_name: mongo-auth
        ports:
            - '27020:27017'
        volumes:
            - ./infrastructure/database/auth_data:/data/db
        networks:
            - network-cluster

    mongo-notification:
        image: mongo:latest
        container_name: mongo-notification
        ports:
            - '27021:27017'
        volumes:
            - ./infrastructure/database/notification_data:/data/db
        networks:
            - network-cluster

    # TCP load-balancer
    mqtt-broker-lb:
        image: haproxy:2.6
        container_name: mqtt-broker-lb
        volumes:
            - ./infrastructure/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
        ports:
            - '1884:1883'
            - '9001:9001'
        networks:
            - network-cluster
        depends_on:
            - mqtt-broker
            - mqtt-broker2
            - mqtt-broker3
        restart: always

volumes:
    frontend_node_modules:

networks:
    network-cluster:
        driver: bridge
